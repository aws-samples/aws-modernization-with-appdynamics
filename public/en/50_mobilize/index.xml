<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mobilize on AppDynamics Workshop</title>
    <link>/en/50_mobilize.html</link>
    <description>Recent content in Mobilize on AppDynamics Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="/en/50_mobilize/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AD Financial Web UI</title>
      <link>/en/50_mobilize/1_review_app.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/50_mobilize/1_review_app.html</guid>
      <description>AD Financial on the Web Before we login to the AppDynamics console to observe the pre-modernized version of the application, let&amp;rsquo;s take a quick look at the web interface of the application from an end users perspective.
Use the following steps to find the URL to the web site:
1 . Go to your Cloud9 console and click on the Preview option at the top
2 . Then select Preview Running Application from the drop down</description>
    </item>
    
    <item>
      <title>Login to AppDynamics</title>
      <link>/en/50_mobilize/2_login_appd.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/50_mobilize/2_login_appd.html</guid>
      <description>Login to the AppDynamics Controller Once the setup utility has finished, you can find your login credentials to your AppDynamics Controller by using the commands below:
cd /home/ec2-user/environmentcat workshop-user-details.txtYour workshop user details file should have the following information similar to the image below:
 The URL to the AppDynamics Controller you will use The credentials you will use to login to the Controller The names of the Pre-Modernization APM and EUM applications The names of the Post-Modernization APM and EUM applications  In a separate browser tab or window, navigate to the URL that is next to Controller URL in the workshop user details file.</description>
    </item>
    
    <item>
      <title>End User Monitoring</title>
      <link>/en/50_mobilize/3_browser_rum.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/50_mobilize/3_browser_rum.html</guid>
      <description>The first few challanges Nathan and his team need to address are related to the web frontend  Differentiating issues in the web UI versus the backend services Mapping the web pages to the backend business transactions Baselining the end user experience on the web site with:  End User Response Time Drop-off rates in the user journey    Navigate to the BRUM Application Once you have logged into the AppDynamics controller, you should see the home page.</description>
    </item>
    
    <item>
      <title>Flow Maps</title>
      <link>/en/50_mobilize/4_flowmaps.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/50_mobilize/4_flowmaps.html</guid>
      <description>In the previous section, End User Monitoring helped us identify the 5 web pages associated with the loan approval process that showed high end user response times. We also confirmed that the high response times were directly related to the backend services supporting the browser based frontend. Now lets take a deeper dive into the backend components and services related to the loan approval process. Navigate to the APM Application Let&amp;rsquo;s start by finding the pre-modernized version of the AD Financial APM (App Performance Monitoring) application and open it to investigate the flow map.</description>
    </item>
    
    <item>
      <title>Business Transactions</title>
      <link>/en/50_mobilize/5_business_txns.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/50_mobilize/5_business_txns.html</guid>
      <description>In the previous section, Flow Maps helped us identify latency issues in the LoanServices tier, and the backend database. Now lets take a deeper dive into the business transactions related to the LoanServices tier to identify which transactions are resulting in longer response times. The Value of Business Transactions In AppDynamics a business transaction represents the data processing flow for a request, most often a user request. In real-world terms, many different components and dependencies in your application may interact to provide services to fulfill the following types of requests:</description>
    </item>
    
    <item>
      <title>Databases</title>
      <link>/en/50_mobilize/6_databases.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/50_mobilize/6_databases.html</guid>
      <description>In the previous section, the business transactions view helped us easily isolate the 5 problematic business transactions for the loan approval process. We identified that significant time was spent in one of the JDBC calls to the database. Let&amp;rsquo;s now take a deeper look to isolate the specific database queries that are degarding the perfomance of the loan application process. DB Visibility from APM Agents With AppDynamics APM agents, not only did we see database calls on the Flow Maps and in the Transaction Snapshots, but we also get a summary of the calls the application made to each database containing valuable KPIs.</description>
    </item>
    
    <item>
      <title>Summary</title>
      <link>/en/50_mobilize/7_summary.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/50_mobilize/7_summary.html</guid>
      <description>What We Accomplished Let&amp;rsquo;s recap how Nathan and his team mobilized at speed and gathered the critcal data needed during this phase by utilizing AppDynamics.
Understanding the Current Application Nathan and his team were able to utilize AppDynamics to make a fast and accurate assessment of the required items below:
 Differentiate issues in the web UI versus the backend services Inventory of all application components and the hosts they run on Inventory of all dependencies across service APIs Inventory of all dependencies to backends and third-party systems  Understanding Key Business Transactions Nathan was able to quickly understand what the key business transactions were in the application and the components they map to so he could prioritize them for refactoring during the modernization effort.</description>
    </item>
    
  </channel>
</rss>